class Solution {
    public int search(int[] nums, int target) {
    int start=0;
    int end=nums.length-1;
    int pivot = getPivot(nums);
    if(pivot==-1){
        return rotatedbs(nums,target,start,end);
    }
    else{
    if(nums[pivot]==target){
         return pivot;
    }
    else if(target>=nums[start]){
    return rotatedbs(nums,target,start,pivot-1);
    }
    else{
        return rotatedbs(nums,target,pivot+1,end);
    }

    }

    }
            int getPivot(int[] nums){
            int start=0;
            int end=nums.length-1;
            while(start<=end) {
                int mid = start + (end - start) / 2;
                if (mid < end && nums[mid] > nums[mid + 1]) {
                    return mid;
                } else if (mid > start && nums[mid] < nums[mid - 1]) {
                    return mid - 1;
                } else if (nums[start] >= nums[mid]) {
                    end = mid - 1;
                } else {
                    start = mid + 1;
                }
            }
            return -1;
        }
        int rotatedbs(int[] nums,int target,int start,int end){
            while(start<=end){
            int mid=start+(end-start)/2;
            if(nums[mid]==target){
                return mid;
            }
            else if(target>nums[mid]){
                start=mid+1;
            }
            else{
                end = mid-1;
            }
            }
            return -1;
        }
}
